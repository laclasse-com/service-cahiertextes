# -*- coding: utf-8 -*-

require 'spec_helper'

describe CahierDeTextesAPI::V1::EmploisDuTempsAPI do
  include Rack::Test::Methods

  before :all do
    TableCleaner.new( DB, [] ).clean

    [ [ 'DS', 'Devoir surveillé' ],
      [ 'DM', 'Devoir à la maison' ],
      [ 'Leçon', 'Leçon à apprendre' ],
      [ 'Exposé', 'Exposé à préparer' ],
      [ 'Recherche', 'Recherche à faire' ],
      [ 'Travail', 'Travail à faire' ]
    ].each do |type_devoir|
      TypeDevoir.create( label: type_devoir.first,
                         description: type_devoir.last )
    end

    ph = PlageHoraire.create( label: 'dummy_PH',
                              debut: Time.parse( '14:00' ),
                              fin: Time.parse( '15:00' ))

    5.times { |i|
      cedt = CreneauEmploiDuTemps.create( debut: ph.id,
                                          fin: ph.id,
                                          jour_de_la_semaine: i + 1,
                                          matiere_id: '001122',
                                          deleted: false,
                                          date_creation: Time.now,
                                          date_suppression: nil )

      CreneauEmploiDuTempsEnseignant.unrestrict_primary_key
      cedt.add_enseignant( enseignant_id: "enseignant_#{i + 1}" )
      CreneauEmploiDuTempsEnseignant.restrict_primary_key

      CreneauEmploiDuTempsRegroupement.unrestrict_primary_key
      cedt.add_regroupement( regroupement_id: i + 1 )
      CreneauEmploiDuTempsRegroupement.restrict_primary_key

      if (i + 1).even?
        ct = CahierDeTextes.create( date_creation: Time.now,
                                    regroupement_id: i + 1 )

        sp = Cours.create( creneau_emploi_du_temps_id: cedt.id,
                           cahier_de_textes_id: ct.id,
                           enseignant_id: "enseignant_#{i + 1}",
                           date_cours: Date.parse( '2015-01-05' ) + i.day,
                           contenu: 'Séquence pédagogique de test' )
        cedt.add_cour( sp )

        d = Devoir.create( creneau_emploi_du_temps_id: cedt.id,
                           cours_id: sp.id,
                           type_devoir_id: TypeDevoir.first.id,
                           date_due: Date.parse( '2015-01-05' ) + i.day + 1.week,
                           contenu: 'Devoir de test' )
        cedt.add_devoir( d )
      end
    }
  end

  def app
    CahierDeTextesAPI::API
  end

  it 'récupère l\'emploi du temps de l\'enseignant' do
    module CahierDeTextesApp
      module Helpers
        module User
          def user
            { uid: 'VAA00000',
              user_detailed: { 'classes' => [ { 'etablissement_code' => 'Test',
                                                'classe_id' => 1 },
                                              { 'etablissement_code' => 'Test',
                                                'classe_id' => 2 },
                                              { 'etablissement_code' => 'Invalid',
                                                'classe_id' => 3 } ],
                               'groupes_eleves' => [ { 'etablissement_code' => 'Test',
                                                       'groupe_id' => 4 },
                                                     { 'etablissement_code' => 'Invalid',
                                                       'groupe_id' => 5 } ],
                               'groupes_libres' => [  ],
                               'roles' => [ { 'etablissement_code_uai' => 'Test',
                                              'role_id' => 'TECH' } ],
                               'profils' => [ { 'etablissement_code_uai' => 'Test',
                                                'profil_id' => 'ENS' } ],
                               'profil_actif' => { 'etablissement_code_uai' => 'Test',
                                                   'profil_id' => 'ENS' },
                               'etablissements' => 'dummy',
                               'applications' => 'dummy',
                               'ressources_numeriques' => 'dummy',
                               'enfants' => 'dummy',
                             } }
          end
        end
      end
    end

    debut = Date.parse( '2015-01-05' )
    fin = debut + 6.days

    get "/v1/emplois_du_temps/du/#{debut}/au/#{fin}"

    LOGGER.debug last_response if last_response.status == 500
    expect( last_response.status ).to eq 200

    get '/v1/emplois_du_temps', { debut: debut,
                                  fin: fin }

    LOGGER.debug last_response if last_response.status == 500
    expect( last_response.status ).to eq 200
  end

  it 'récupère l\'emploi du temps de l\'élève' do
    module CahierDeTextesApp
      module Helpers
        module User
          def user
            { uid: 'VAA00000',
              user_detailed: { 'classes' => [ { 'etablissement_code' => 'Test',
                                                'classe_id' => 1 },
                                              { 'etablissement_code' => 'Test',
                                                'classe_id' => 2 },
                                              { 'etablissement_code' => 'Invalid',
                                                'classe_id' => 3 } ],
                               'groupes_eleves' => [ { 'etablissement_code' => 'Test',
                                                       'groupe_id' => 4 },
                                                     { 'etablissement_code' => 'Invalid',
                                                       'groupe_id' => 5 } ],
                               'groupes_libres' => [  ],
                               'roles' => [ { 'etablissement_code_uai' => 'Test',
                                              'role_id' => 'Rien' } ],
                               'profils' => [ { 'etablissement_code_uai' => 'Test',
                                                'profil_id' => 'ELV' } ],
                               'profil_actif' => { 'etablissement_code_uai' => 'Test',
                                                   'profil_id' => 'ELV' },
                               'etablissements' => 'dummy',
                               'applications' => 'dummy',
                               'ressources_numeriques' => 'dummy',
                               'enfants' => 'dummy',
                             } }
          end
        end
      end
    end

    debut = Date.parse( '2015-01-05' )
    fin = debut + 6.days

    get "/v1/emplois_du_temps/du/#{debut}/au/#{fin}"

    LOGGER.debug last_response if last_response.status == 500
    expect( last_response.status ).to eq 200

    get '/v1/emplois_du_temps', { debut: debut,
                                  fin: fin }

    LOGGER.debug last_response if last_response.status == 500
    expect( last_response.status ).to eq 200
  end

  it 'récupère l\'emploi du temps du principal ou du CPE' do
    module CahierDeTextesApp
      module Helpers
        module User
          def user
            { uid: 'VAA00000',
              user_detailed: { 'classes' => [ { 'etablissement_code' => 'Test',
                                                'classe_id' => 1 },
                                              { 'etablissement_code' => 'Test',
                                                'classe_id' => 2 },
                                              { 'etablissement_code' => 'Invalid',
                                                'classe_id' => 3 } ],
                               'groupes_eleves' => [ { 'etablissement_code' => 'Test',
                                                       'groupe_id' => 4 },
                                                     { 'etablissement_code' => 'Invalid',
                                                       'groupe_id' => 5 } ],
                               'groupes_libres' => [  ],
                               'roles' => [ { 'etablissement_code_uai' => 'Test',
                                              'role_id' => 'Rien' } ],
                               'profils' => [ { 'etablissement_code_uai' => 'Test',
                                                'profil_id' => 'DIR' } ],
                               'profil_actif' => { 'etablissement_code_uai' => 'Test',
                                                   'profil_id' => 'DIR' },
                               'etablissements' => 'dummy',
                               'applications' => 'dummy',
                               'ressources_numeriques' => 'dummy',
                               'enfants' => 'dummy',
                             } }
          end
        end
      end
    end

    debut = Date.parse( '2015-01-05' )
    fin = debut + 6.days

    get "/v1/emplois_du_temps/du/#{debut}/au/#{fin}"

    LOGGER.debug last_response if last_response.status == 500
    expect( last_response.status ).to eq 200

    get '/v1/emplois_du_temps', { debut: debut,
                                  fin: fin }

    LOGGER.debug last_response if last_response.status == 500
    expect( last_response.status ).to eq 200
  end

  it 'récupère l\'emploi du temps de l\'élève par un parent' do
    module CahierDeTextesApp
      module Helpers
        module User
          def user
            { uid: 'VAA11111',
              user_detailed: { 'classes' => [ { 'etablissement_code' => 'Test',
                                                'classe_id' => 1 },
                                              { 'etablissement_code' => 'Test',
                                                'classe_id' => 2 },
                                              { 'etablissement_code' => 'Invalid',
                                                'classe_id' => 3 } ],
                               'groupes_eleves' => [ { 'etablissement_code' => 'Test',
                                                       'groupe_id' => 4 },
                                                     { 'etablissement_code' => 'Invalid',
                                                       'groupe_id' => 5 } ],
                               'groupes_libres' => [  ],
                               'roles' => [ { 'etablissement_code_uai' => 'Test',
                                              'role_id' => 'Rien' } ],
                               'profils' => [ { 'etablissement_code_uai' => 'Test',
                                                'profil_id' => 'TUT' } ],
                               'profil_actif' => { 'etablissement_code_uai' => 'Test',
                                                   'profil_id' => 'TUT' },
                               'etablissements' => 'dummy',
                               'applications' => 'dummy',
                               'ressources_numeriques' => 'dummy',
                               'enfants' => [ { uid: 'VAA00000',
                                                'classes' => [ { 'etablissement_code' => 'Test',
                                                                 'classe_id' => 1 },
                                                               { 'etablissement_code' => 'Test',
                                                                 'classe_id' => 2 },
                                                               { 'etablissement_code' => 'Invalid',
                                                                 'classe_id' => 3 } ] } ],
                             } }
          end
        end
      end
    end

    debut = Date.parse( '2015-01-05' )
    fin = debut + 6.days

    get "/v1/emplois_du_temps/du/#{debut}/au/#{fin}", { uid: 'VAA00000' }

    LOGGER.debug last_response if last_response.status == 500
    expect( last_response.status ).to eq 200

    get '/v1/emplois_du_temps', { debut: debut,
                                  fin: fin,
                                  uid: 'VAA00000' }

    LOGGER.debug last_response if last_response.status == 500
    expect( last_response.status ).to eq 200
  end
end
